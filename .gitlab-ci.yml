stages:
  - dependecies
  - test
  - build
  - containerize
  - pre-deploy
  - deploy

image: node:14-alpine

variables:
  GIT_DEPTH: 1
  DEPLOY_TO_VERCEL: 0
  DEPLOY_TO_GOOGLE: 0

.rule_merge_request: &rule_mr
  if: '$CI_PIPELINE_SOURCE == "merge_request_event"'

.rule_test: &rule_test
  if: '$CI_COMMIT_BRANCH == "develop"'

.rule_acceptance: &rule_acceptance
  if: '$CI_COMMIT_BRANCH == "master"'

.rule_production: &rule_production
  if: $CI_COMMIT_TAG

include:
  - local: .gitlab-ci.deployToVercel.yml
    rules:
      - if: $DEPLOY_TO_VERCEL == "1"
  - local: .gitlab-ci.deployToGoogle.yml
    rules:
      - if: $DEPLOY_TO_GOOGLE == "1"

.node-modules:
  cache:
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
      - .next/cache/
    policy: pull

yarn:
  extends: .node-modules
  rules:
    - <<: *rule_mr
  stage: dependecies
  script:
    - yarn --frozen-lockfile
  cache:
    policy: pull-push


test:
  extends: .node-modules
  allow_failure: false
  rules:
    - <<: *rule_mr
    - <<: *rule_test
    - <<: *rule_acceptance
    - <<: *rule_production
  stage: test
  script:
    - yarn lint
    - yarn test
    - yarn stylelint
    - yarn prettier:check
    - yarn type-check

.lighthouse:
  extends: .node-modules
  script:
    - yarn global add @lhci/cli
    - lhci autorun --config=.lighthouse/lighthouserc.json
    - node .lighthouse/exportMetrics.js
  variables:
    KUBERNETES_CPU_REQUEST: 1
    KUBERNETES_CPU_LIMIT: 1
    KUBERNETES_MEMORY_REQUEST: 1Gi
    KUBERNETES_MEMORY_LIMIT: 1Gi
    DEPLOYMENT_ENVIRONMENT: TEST
  artifacts:
    when: on_success
    paths:
      - ./lhci/
      - metrics.txt
    reports:
      metrics: metrics.txt
  dependencies: [ ]

lighthouse:yarn:
  rules:
    - <<: *rule_mr
  stage: test
  image: cypress/browsers:node14.17.0-chrome91-ff89
  variables:
    NEXT_TELEMETRY_DISABLED: 1
    LHCI_START_SERVER_COMMAND: "yarn start"
  before_script:
    - yarn build
  extends: .lighthouse
